async function testReferenceAPI() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API reference –¥–∞–Ω–Ω—ã—Ö...\n')
    
    const response = await fetch('http://localhost:3000/api/products/import/reference')
    const data = await response.json()
    
    console.log('‚úÖ API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω')
    console.log(`üìä –ö–∞—Ç–µ–≥–æ—Ä–∏–π: ${data.categories.length}`)
    console.log(`üìä –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: ${data.suppliers.length}\n`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∏—Ö –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:')
    data.categories.forEach(cat => {
      console.log(`\nüè∑Ô∏è  ${cat.name} (ID: ${cat.id}, slug: ${cat.slug})`)
      if (cat.subcategories && cat.subcategories.length > 0) {
        cat.subcategories.forEach(sub => {
          console.log(`   ‚îî‚îÄ ${sub.name} (ID: ${sub.id}, slug: ${sub.slug})`)
        })
      } else {
        console.log('   ‚îî‚îÄ –ù–µ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π')
      }
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    console.log('\nüè¢ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏:')
    data.suppliers.forEach(sup => {
      console.log(`   - ${sup.name} (ID: ${sup.id}, –∫–æ–¥: ${sup.code})`)
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ Wall Panel
    const wallPanel = data.categories.find(cat => cat.name === 'Wall Panel')
    if (wallPanel) {
      console.log('\nüéØ Wall Panel –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏:')
      if (wallPanel.subcategories && wallPanel.subcategories.length > 0) {
        wallPanel.subcategories.forEach(sub => {
          console.log(`   - ${sub.name} (ID: ${sub.id})`)
        })
      } else {
        console.log('   ‚ö†Ô∏è  –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!')
      }
    } else {
      console.log('\n‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è Wall Panel –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API:', error)
  }
}

testReferenceAPI()
