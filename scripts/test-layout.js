async function testLayout() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ä–∞—Å–∫–ª–∞–¥–∫—É –Ω–∞ /contact...')
  
  try {
    const response = await fetch('http://localhost:3000/contact')
    const html = await response.text()
    
    if (response.ok) {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞')
      
      const hasGrid = html.includes('grid-cols-1 lg:grid-cols-12')
      const hasLeftCol = html.includes('lg:col-span-7')
      const hasRightCol = html.includes('lg:col-span-5')
      
      console.log('üìä –†–∞—Å–∫–ª–∞–¥–∫–∞:')
      console.log(`   Grid: ${hasGrid ? '‚úÖ' : '‚ùå'}`)
      console.log(`   Left (7/12): ${hasLeftCol ? '‚úÖ' : '‚ùå'}`)
      console.log(`   Right (5/12): ${hasRightCol ? '‚úÖ' : '‚ùå'}`)
      
      if (hasGrid && hasLeftCol && hasRightCol) {
        console.log('üéâ –î–≤—É—Ö–∫–æ–ª–æ–Ω–æ—á–Ω–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
      } else {
        console.log('‚ö†Ô∏è  –û–¥–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞')
      }
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

testLayout()
