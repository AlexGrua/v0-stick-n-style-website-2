const fs = require('fs');

async function testImport() {
  try {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ SKU...');
    
    const baseUrl = 'http://localhost:3001';
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Excel —Ñ–∞–π–ª
    const testData = [
      ['SKU *', 'Product Name *', 'Description *', 'Category Name *', 'Subcategory Name *', 'Supplier Code *', 'Size *', 'Thickness *', 'Color Name *'],
      ['TEST001', 'Test Product 1', 'Test Description', 'Mosaic', 'Glass Mosaic', 'SUP001', '10x10', '8mm', 'White'],
      ['TEST002', 'Test Product 2', 'Test Description 2', 'Mosaic', 'Glass Mosaic', 'SUP001', '15x15', '10mm', 'Black']
    ];
    
    // –°–æ–∑–¥–∞–µ–º CSV –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–æ—â–µ —á–µ–º Excel)
    const csvContent = testData.map(row => row.join(',')).join('\n');
    fs.writeFileSync('test-import.csv', csvContent);
    
    console.log('üìÑ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª test-import.csv');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∏–º–ø–æ—Ä—Ç–∞
    console.log('üì§ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –∏–º–ø–æ—Ä—Ç–∞...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º reference endpoint
    const referenceResponse = await fetch(`${baseUrl}/api/products/import/reference`);
    if (referenceResponse.ok) {
      const referenceData = await referenceResponse.json();
      console.log('‚úÖ Reference API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', referenceData.categories?.length || 0);
      console.log('üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏:', referenceData.suppliers?.length || 0);
    } else {
      console.log('‚ùå Reference API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —á–µ—Ä–µ–∑ –æ—Å–Ω–æ–≤–Ω–æ–π API
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞...');
    const createResponse = await fetch(`${baseUrl}/api/products`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        name: 'Test Product API',
        description: 'Test Description',
        category_id: 9, // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        sku: 'API_TEST_001',
        status: 'inactive'
      })
    });
    
    if (createResponse.ok) {
      const createResult = await createResponse.json();
      console.log('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('üìã –°–æ–∑–¥–∞–Ω –ø—Ä–æ–¥—É–∫—Ç:', {
        id: createResult.id,
        name: createResult.name,
        sku: createResult.sku
      });
    } else {
      const errorText = await createResponse.text();
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞:', errorText);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ–¥—É–∫—Ç –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
    const listResponse = await fetch(`${baseUrl}/api/products?limit=10`);
    if (listResponse.ok) {
      const listResult = await listResponse.json();
      console.log('‚úÖ –°–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('üìä –í—Å–µ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', listResult.total);
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã:');
      listResult.items?.slice(-3).forEach(product => {
        console.log(`  - ${product.name} (SKU: ${product.sku})`);
      });
    }
    
    console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
  }
}

testImport();
