import { NextResponse } from "next/server"
import { createClient } from "@/lib/supabase/server"

const supabase = createClient()

export async function GET() {
  try {
    console.log("üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞...")

    // –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    const { data: categories, error: categoriesError } = await supabase
      .from("categories")
      .select(`
        id, name, slug, description,
        subcategories(id, name, slug, description)
      `)
      .order("name")

    if (categoriesError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:", categoriesError)
      // Fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
      const fallbackCategories = [
        {
          id: 1,
          name: "Wall Panel",
          slug: "wall-panel",
          description: "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –¥–ª—è —Å—Ç–µ–Ω",
          subcategories: [
            { id: 1, name: "Plain Color", slug: "plain-color", description: "–û–¥–Ω–æ—Ç–æ–Ω–Ω—ã–µ –ø–∞–Ω–µ–ª–∏" },
            { id: 2, name: "Brick Structure", slug: "brick-structure", description: "–ü–∞–Ω–µ–ª–∏ —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π –∫–∏—Ä–ø–∏—á–∞" }
          ]
        }
      ]
      
      const referenceData = {
        categories: fallbackCategories,
        suppliers: []
      }
      
      return NextResponse.json(referenceData)
    }

    // –ü–æ–ª—É—á–∞–µ–º –í–°–ï–• –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ (–Ω–µ —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö)
    const { data: suppliers, error: suppliersError } = await supabase
      .from("suppliers")
      .select("id, name, contact_person, email, phone, status")
      .order("name")

    if (suppliersError) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤:", suppliersError)
      // Fallback –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
      const fallbackSuppliers = [
        { id: 1, name: "–û–û–û \"–°—Ç—Ä–æ–π–ú–∞—Ç–µ—Ä–∏–∞–ª—ã\"", code: "S001", contact_person: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", email: "ivanov@stroymat.ru", phone: "+7-495-123-45-67", status: "active" },
        { id: 2, name: "–¢–î \"–î–µ–∫–æ—Ä –ü–ª—é—Å\"", code: "S002", contact_person: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", email: "petrov@decorplus.ru", phone: "+7-495-234-56-78", status: "active" },
        { id: 3, name: "–ö–æ–º–ø–∞–Ω–∏—è \"–ü–æ–ª–ü—Ä–æ\"", code: "S003", contact_person: "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", email: "sidorov@polpro.ru", phone: "+7-495-345-67-89", status: "active" }
      ]
      
      const referenceData = {
        categories: categories?.map((cat: any) => ({
          id: cat.id,
          name: cat.name,
          slug: cat.slug,
          description: cat.description,
          subcategories: cat.subcategories || []
        })) || [],
        suppliers: fallbackSuppliers
      }
      
      return NextResponse.json(referenceData)
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const referenceData = {
      categories: categories?.map((cat: any) => ({
        id: cat.id,
        name: cat.name,
        slug: cat.slug,
        description: cat.description,
        subcategories: cat.subcategories || []
      })) || [],
      suppliers: suppliers?.map((sup: any) => ({
        id: sup.id,
        name: sup.name,
        code: `S${sup.id.toString().padStart(3, '0')}`, // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –∏–∑ ID
        contact_person: sup.contact_person,
        email: sup.email,
        phone: sup.phone,
        status: sup.status
      })) || []
    }

    console.log(`‚úÖ –°–ø—Ä–∞–≤–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: ${referenceData.categories.length} –∫–∞—Ç–µ–≥–æ—Ä–∏–π, ${referenceData.suppliers.length} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤`)

    return NextResponse.json(referenceData)
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ reference data GET:", error)
    // Fallback –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
    const fallbackData = {
      categories: [
        {
          id: 1,
          name: "Wall Panel",
          slug: "wall-panel",
          description: "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –¥–ª—è —Å—Ç–µ–Ω",
          subcategories: [
            { id: 1, name: "Plain Color", slug: "plain-color", description: "–û–¥–Ω–æ—Ç–æ–Ω–Ω—ã–µ –ø–∞–Ω–µ–ª–∏" },
            { id: 2, name: "Brick Structure", slug: "brick-structure", description: "–ü–∞–Ω–µ–ª–∏ —Å —Ç–µ–∫—Å—Ç—É—Ä–æ–π –∫–∏—Ä–ø–∏—á–∞" }
          ]
        }
      ],
      suppliers: [
        { id: 1, name: "–û–û–û \"–°—Ç—Ä–æ–π–ú–∞—Ç–µ—Ä–∏–∞–ª—ã\"", code: "S001", contact_person: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", email: "ivanov@stroymat.ru", phone: "+7-495-123-45-67", status: "active" },
        { id: 2, name: "–¢–î \"–î–µ–∫–æ—Ä –ü–ª—é—Å\"", code: "S002", contact_person: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", email: "petrov@decorplus.ru", phone: "+7-495-234-56-78", status: "active" },
        { id: 3, name: "–ö–æ–º–ø–∞–Ω–∏—è \"–ü–æ–ª–ü—Ä–æ\"", code: "S003", contact_person: "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", email: "sidorov@polpro.ru", phone: "+7-495-345-67-89", status: "active" }
      ]
    }
    
    return NextResponse.json(fallbackData)
  }
}
